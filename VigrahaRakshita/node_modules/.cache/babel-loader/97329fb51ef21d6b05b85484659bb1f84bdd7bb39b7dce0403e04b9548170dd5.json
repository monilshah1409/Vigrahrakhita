{"ast":null,"code":"var _jsxFileName = \"/Users/Monil_149/Desktop/Vigrahrakshita_3/VigrahaRakshita/src/components/AIPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityRisks = {\n  Chennai: '70% risk of cyclone next 3 months (Sample Prediction)',\n  Patna: '55% risk of flood (Sample Prediction)',\n  Bhuj: '40% risk of earthquake (Sample Prediction)'\n};\nconst AIPrediction = () => {\n  _s();\n  const [selectedCity, setSelectedCity] = useState('');\n  const [risk, setRisk] = useState('');\n  const handleChange = e => {\n    const city = e.target.value;\n    setSelectedCity(city);\n    setRisk(cityRisks[city] || '');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded shadow mb-8 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83E\\uDDE0 AI-Based Prediction Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCity,\n      onChange: handleChange,\n      className: \"border border-gray-300 rounded p-2 w-full max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), Object.keys(cityRisks).map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), risk && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg font-semibold text-gray-800\",\n      children: risk\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPrediction, \"5aq7NQmO8HqiO6lnzlLQYVzJyWI=\");\n_c = AIPrediction;\nexport default AIPrediction;\nvar _c;\n$RefreshReg$(_c, \"AIPrediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","cityRisks","Chennai","Patna","Bhuj","AIPrediction","_s","selectedCity","setSelectedCity","risk","setRisk","handleChange","e","city","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","Object","keys","map","_c","$RefreshReg$"],"sources":["/Users/Monil_149/Desktop/Vigrahrakshita_3/VigrahaRakshita/src/components/AIPrediction.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst cityRisks = {\n  Chennai: '70% risk of cyclone next 3 months (Sample Prediction)',\n  Patna: '55% risk of flood (Sample Prediction)',\n  Bhuj: '40% risk of earthquake (Sample Prediction)',\n};\n\nconst AIPrediction = () => {\n  const [selectedCity, setSelectedCity] = useState('');\n  const [risk, setRisk] = useState('');\n\n  const handleChange = (e) => {\n    const city = e.target.value;\n    setSelectedCity(city);\n    setRisk(cityRisks[city] || '');\n  };\n\n  return (\n    <div className=\"p-4 bg-white rounded shadow mb-8 max-w-4xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-4\">ðŸ§  AI-Based Prediction Demo</h2>\n      <select\n        value={selectedCity}\n        onChange={handleChange}\n        className=\"border border-gray-300 rounded p-2 w-full max-w-xs\"\n      >\n        <option value=\"\">Select a city</option>\n        {Object.keys(cityRisks).map((city) => (\n          <option key={city} value={city}>\n            {city}\n          </option>\n        ))}\n      </select>\n      {risk && (\n        <p className=\"mt-4 text-lg font-semibold text-gray-800\">{risk}</p>\n      )}\n    </div>\n  );\n};\n\nexport default AIPrediction;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAG;EAChBC,OAAO,EAAE,uDAAuD;EAChEC,KAAK,EAAE,uCAAuC;EAC9CC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3BP,eAAe,CAACK,IAAI,CAAC;IACrBH,OAAO,CAACT,SAAS,CAACY,IAAI,CAAC,IAAI,EAAE,CAAC;EAChC,CAAC;EAED,oBACEb,OAAA;IAAKgB,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjEjB,OAAA;MAAIgB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxErB,OAAA;MACEe,KAAK,EAAER,YAAa;MACpBe,QAAQ,EAAEX,YAAa;MACvBK,SAAS,EAAC,oDAAoD;MAAAC,QAAA,gBAE9DjB,OAAA;QAAQe,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtCE,MAAM,CAACC,IAAI,CAACvB,SAAS,CAAC,CAACwB,GAAG,CAAEZ,IAAI,iBAC/Bb,OAAA;QAAmBe,KAAK,EAAEF,IAAK;QAAAI,QAAA,EAC5BJ;MAAI,GADMA,IAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACRZ,IAAI,iBACHT,OAAA;MAAGgB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAAER;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAClE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}